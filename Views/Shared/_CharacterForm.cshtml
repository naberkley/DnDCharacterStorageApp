@model DnDCharacterStorageApp.Models.Character

@{
    bool isReadOnly = (ViewBag.Action == "Details" || ViewBag.Action == "Delete");
    var abilitiesDict = DnDCharacterStorageApp.Models.Abilities.Definitions;
    var skillsDict = DnDCharacterStorageApp.Models.Skills.Definitions;
}

<div class="paper-square">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <div class="row">
        <div class="col-lg-12">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group row">
                <!-- Name, Race, Class, Level, Background -->
                <div class="form-group col-lg-4 col-sm-12">
                    <label asp-for="Name" class="control-label"></label>
                    @if (isReadOnly)
                    {
                        <p>@Model.Name</p>
                    }
                    else
                    {
                        <input asp-for="Name" class="form-control" />
                    }
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>

                <div class="form-group col-lg-4 col-sm-12">
                    <label asp-for="Race" class="control-label"></label>
                    @if (isReadOnly)
                    {
                        <p>@Model.Race</p>
                    }
                    else
                    {
                        <input asp-for="Race" class="form-control" />
                    }
                    <span asp-validation-for="Race" class="text-danger"></span>
                </div>

                <div class="form-group col-lg-4 col-sm-12">
                    <label asp-for="Class" class="control-label"></label>
                    @if (isReadOnly)
                    {
                        <p>@Model.Class</p>
                    }
                    else
                    {
                        <input asp-for="Class" class="form-control" />
                    }
                    <span asp-validation-for="Class" class="text-danger"></span>
                </div>

                <div class="form-group col-lg-4 col-sm-12">
                    <label asp-for="Level" class="control-label"></label>
                    @if (isReadOnly)
                    {
                        <p>@Model.Level</p>
                    }
                    else
                    {
                        <input asp-for="Level" class="form-control" />
                    }
                    <span asp-validation-for="Level" class="text-danger"></span>
                </div>

                <div class="form-group col-lg-4 col-sm-12">
                    <label asp-for="Background" class="control-label"></label>
                    @if (isReadOnly)
                    {
                        <p>@Model.Background</p>
                    }
                    else
                    {
                        <input asp-for="Background" class="form-control" />
                    }
                    <span asp-validation-for="Background" class="text-danger"></span>
                </div>

                <div class="form-group col-lg-4 col-sm-12">
                    <label asp-for="Alignment" class="control-label"></label>
                    @if (isReadOnly)
                    {
                        <p>@Model.Alignment</p>
                    }
                    else
                    {
                        <input asp-for="Alignment" class="form-control" />
                    }
                    <span asp-validation-for="Alignment" class="text-danger"></span>
                </div>

                <div class="form-group col-lg-4 col-sm-12">
                    <label asp-for="Experience" class="control-label"></label>
                    @if (isReadOnly)
                    {
                        <p>@Model.Experience</p>
                    }
                    else
                    {
                        <input asp-for="Experience" class="form-control" />
                    }
                    <span asp-validation-for="Experience" class="text-danger"></span>
                </div>
            </div>
        </div>
        <br />
        <hr />

        <div class="col-lg-12">
            <div class="form-group row">
                <!-- HitPoints, Speed, ArmorClass, ProficiencyBonus -->
                <div class="form-group col-lg-3 col-sm-12">
                    <label asp-for="HitPoints" class="control-label"></label>
                    @if (isReadOnly)
                    {
                        <p>@Model.HitPoints</p>
                    }
                    else
                    {
                        <input asp-for="HitPoints" class="form-control" />
                    }
                    <span asp-validation-for="HitPoints" class="text-danger"></span>
                </div>

                <div class="form-group col-lg-3 col-sm-12">
                    <label asp-for="Speed" class="control-label"></label>
                    @if (isReadOnly)
                    {
                        <p>@Model.Speed</p>
                    }
                    else
                    {
                        <input asp-for="Speed" class="form-control" />
                    }
                    <span asp-validation-for="Speed" class="text-danger"></span>
                </div>

                <div class="form-group col-lg-3 col-sm-12">
                    <label asp-for="ArmorClass" class="control-label"></label>
                    @if (isReadOnly)
                    {
                        <p>@Model.ArmorClass</p>
                    }
                    else
                    {
                        <input asp-for="ArmorClass" class="form-control" />
                    }
                    <span asp-validation-for="ArmorClass" class="text-danger"></span>
                </div>
            </div>
        </div>
    </div> <!-- end of row -->
    <br />

    <div class="row">
        <div class="form-group col-lg-3 col-sm-12">
            <label asp-for="ProficiencyBonus" class="control-label"></label>
            <input asp-for="ProficiencyBonus" type="hidden" />
            <p class="text-muted proficiency-bonus">@((Model.ProficiencyBonus >= 0 ? "+" : "") + Model.ProficiencyBonus)</p>
            <span asp-validation-for="ProficiencyBonus" class="text-danger"></span>
        </div>

        <div class="form-group col-lg-3 col-sm-12">
            <label asp-for="InitiativeBonus" class="control-label"></label>
            @if (isReadOnly)
            {
                <p>@((!Model.InitiativeBonus.StartsWith("+") && !Model.InitiativeBonus.StartsWith("-") ? "+" : "") + Model.InitiativeBonus)</p>
            }
            else
            {
                <input asp-for="InitiativeBonus" class="form-control" />
            }
            <span asp-validation-for="InitiativeBonus" class="text-danger"></span>
        </div>

    </div>

    <br />

    <div class="row">
        <div class="col-md-12">
            <!-- Abilities -->
            <div class="table-responsive">
                <table class="table">
                    <!-- Abilities table -->
                    <thead>
                        <tr>
                            <th>Abilities</th>
                            <th></th>
                            <th>
                                <span class="d-none d-md-inline">Modifier</span>
                                <span class="d-md-none">Mod</span>
                            </th>
                            <th>
                                <span class="d-none d-sm-inline">Save <br /> Proficiency</span>
                                <span class="d-sm-none">Save <br /> Prof</span>
                            </th>
                            <th>Save <br /> Bonus</th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (var i = 0; i < Model.AbilitiesList.Count; i++)
                        {
                            var ability = Model.AbilitiesList[i];
                            <tr>
                                <td>
                                    @Html.HiddenFor(m => m.AbilitiesList[i].Id)
                                    @Html.HiddenFor(m => m.AbilitiesList[i].AbilityName)
                                    @Html.HiddenFor(m => m.AbilitiesList[i].Modifier)
                                    @Html.HiddenFor(m => m.AbilitiesList[i].SaveBonus)
                                    <span class="tooltip-hover" title="@Abilities.Definitions[ability.AbilityName]["Description"]"
                                          data-toggle="tooltip" data-original-title="@Abilities.Definitions[ability.AbilityName]["Description"]"
                                          data-content="@Abilities.Definitions[ability.AbilityName]["Description"]" tabindex="0">
                                        @ability.AbilityName
                                    </span>
                                </td>
                                <td>
                                    @if (isReadOnly)
                                    {
                                        <p>@ability.Score</p>
                                    }
                                    else
                                    {
                                        @Html.EditorFor(m => m.AbilitiesList[i].Score, new { htmlAttributes = new { @class = "form-control ability-score-input" } })
                                    }
                                </td>
                                <td class="modifier">
                                    @((ability.Modifier >= 0 ? "+" : "") + ability.Modifier)
                                </td>
                                <td>
                                    @if (isReadOnly)
                                    {
                                        <input type="checkbox" checked="@ability.HasSaveProficiency" disabled />
                                    }
                                    else
                                    {
                                        @Html.CheckBoxFor(m => m.AbilitiesList[i].HasSaveProficiency)
                                    }
                                </td>
                                <td class="save-bonus">
                                    @((ability.SaveBonus >= 0 ? "+" : "") + ability.SaveBonus)
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div> <!-- end of row -->

    <div class="row">
        <div class="col-md-12">
            <!-- Skills -->
            <div class="table-responsive">
                <table class="table">
                    <!-- Skills table -->
                    <thead>
                        <tr>
                            <th>Skills</th>
                            <th></th>
                            <th>
                                <span class="d-none d-md-inline">Proficiency</span>
                                <span class="d-md-none">Proficient</span>
                            </th>
                            <th>
                                <span class="d-none d-md-inline">Expertise</span>
                                <span class="d-md-none">Expert</span>
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (var i = 0; i < Model.SkillsList.Count; i++)
                        {
                            var skill = Model.SkillsList[i];
                            <tr>
                                <td>
                                    @Html.HiddenFor(m => m.SkillsList[i].Id)
                                    @Html.HiddenFor(m => m.SkillsList[i].SkillName)
                                    @Html.HiddenFor(m => m.SkillsList[i].Score, new { @class = "skill-score-input", data_original_score = skill.Score })
                                    <span class="tooltip-hover" title="@skillsDict[skill.SkillName]["Description"]"
                                            data-toggle="tooltip" data-original-title="@skillsDict[skill.SkillName]["Description"]"
                                            data-content="@skillsDict[skill.SkillName]["Description"]" tabindex="0">
                                        @skill.SkillName
                                    </span>

                                    <span class="text-muted">
                                        (@skillsDict[skill.SkillName]["Ability"])
                                    </span>
                                </td>
                                <td class="skill-score" style="width: 50px">
                                    @((skill.Score >= 0 ? "+" : "") + skill.Score)
                                </td>
                                <td>
                                    @if (isReadOnly)
                                    {
                                        <input type="checkbox" checked="@skill.HasProficiency" disabled />
                                    }
                                    else
                                    {
                                        @Html.CheckBoxFor(m => m.SkillsList[i].HasProficiency)
                                    }
                                </td>
                                <td>
                                    @if (isReadOnly)
                                    {
                                        <input type="checkbox" checked="@skill.HasExpertise" disabled />
                                    }
                                    else
                                    {
                                        @Html.CheckBoxFor(m => m.SkillsList[i].HasExpertise)
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div> <!-- end of row -->
</div>

<br />

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.bundle.min.js"></script>
<script src="~/js/characterForm.js" asp-append-version="true"></script>